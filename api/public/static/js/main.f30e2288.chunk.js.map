{"version":3,"sources":["_components/GooglePlaceAutoComplete.jsx","_components/PrivateRoute.jsx","_helpers/fake-backend.js","_helpers/history.js","_constants/alert.constants.js","_constants/user.constants.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/registration.reducer.js","_reducers/users.reducer.js","_reducers/alert.reducer.js","_helpers/store.js","_helpers/auth-header.js","components/Nav/DrawerMenu.jsx","components/Nav/Nav.jsx","components/OrdersPage/OrdersPage.jsx","components/Profile/Profile.jsx","components/SearchPage/global.state.js","components/SearchPage/LocationSearchBox.jsx","components/SearchPage/SearchPage.jsx","_actions/alert.actions.js","_services/user.service.js","_actions/user.actions.js","components/SignInPage/SignInPage.jsx","components/SignUpPage/SignUpPage.jsx","components/App/App.jsx","reportWebVitals.js","index.js","../external \"{/\"apiUrl/\":/\"http:/localhost:9000/api/\",/\"apiV1Url/\":/\"http:/localhost:9000/api/v1/\"}\""],"names":["autocompleteService","current","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","GooglePlaceAutoComplete","props","classes","React","useState","value","setValue","inputValue","setInputValue","options","setOptions","loaded","useRef","window","document","querySelector","src","position","id","script","createElement","setAttribute","appendChild","loadScript","fetch","useMemo","throttle","request","callback","getPlacePredictions","useEffect","active","google","maps","places","AutocompleteService","input","results","newOptions","Autocomplete","style","width","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","onChange","event","newValue","setLocation","structured_formatting","main_text","onInputChange","newInputValue","renderInput","params","TextField","label","variant","fullWidth","renderOption","matches","main_text_matched_substrings","parts","parse","map","match","offset","length","Grid","container","alignItems","item","className","xs","part","index","fontWeight","highlight","Typography","secondary_text","PrivateRoute","Component","component","rest","roles","render","localStorage","getItem","to","pathname","state","from","location","JSON","history","createBrowserHistory","alertConstants","userConstants","user","initialState","loggedIn","rootReducer","combineReducers","authentication","action","type","loggingIn","registration","registering","users","loading","items","error","deleting","filter","userCopy","deleteError","alert","message","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","Authorization","useStyle","listIcon","minWidth","DrawerMenu","List","ListItem","button","Link","ListItemIcon","ListItemText","primary","drawerWidth","toolbar","paddingRight","toolbarIcon","display","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","height","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","menuGrid","flexWrap","menuGridItem","Nav","open","setOpen","anchorEl","setAnchorEl","useSelector","handleUserIconClose","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","noWrap","aria-controls","aria-haspopup","currentTarget","disabled","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","MenuItem","href","underline","Drawer","paper","Divider","direction","alignContent","process","OrdersPage","useDispatch","flexDirection","backgroundColor","Profile","Container","maxWidth","username","useSearchLocation","createGlobalState","LocationSearchBox","setSearchLocation","root","marginTop","locationSearchBox","SearchPage","Date","now","selectedDate","setSelectedDate","handleDateChange","date","console","log","utils","DateFnsUtils","justify","format","margin","KeyboardButtonProps","alertActions","success","clear","userService","login","password","requestOptions","method","headers","body","Config","apiUrl","then","handleResponse","data","access_token","setItem","stringify","logout","register","getAll","apiV1Url","getById","update","delete","removeItem","response","ok","status","reload","statusText","Promise","reject","userActions","dispatch","push","failure","toString","topSpace","paddingTop","demo","DemoColor","avatar","main","form","submit","circularProgress","SignInPage","inputs","setInputs","useLocation","handleChange","e","target","name","Avatar","noValidate","onSubmit","preventDefault","required","autoFocus","FormControlLabel","control","Checkbox","Button","CircularProgress","size","Alert","severity","SignUpPage","email","setUser","content","overflow","appBarSpacer","App","CssBaseline","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f30e2288.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\nimport React, { useEffect } from 'react';\n\nfunction loadScript(src, position, id) {\n    if (!position) {\n        return;\n    }\n\n    const script = document.createElement('script');\n    script.setAttribute('async', '');\n    script.setAttribute('id', id);\n    script.src = src;\n    position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nfunction GooglePlaceAutoComplete(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(null);\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n    const loaded = React.useRef(false);\n\n    if (typeof window !== 'undefined' && !loaded.current) {\n        if (!document.querySelector('#google-maps')) {\n            loadScript(\n                `https://maps.googleapis.com/maps/api/js?key=AIzaSyBczpaHgrkYzcqExXfEAaJz_WDDqM2eKm4&libraries=places`,\n                document.querySelector('head'),\n                'google-maps',\n            );\n        }\n\n        loaded.current = true;\n    }\n\n    const fetch = React.useMemo(\n        () =>\n            throttle((request, callback) => {\n                autocompleteService.current.getPlacePredictions(\n                    request,\n                    callback,\n                );\n            }, 200),\n        [],\n    );\n\n    useEffect(() => {\n        let active = true;\n\n        if (!autocompleteService.current && window.google) {\n            autocompleteService.current = new window.google.maps.places.AutocompleteService();\n        }\n        if (!autocompleteService.current) {\n            return undefined;\n        }\n\n        if (inputValue === '') {\n            setOptions(value ? [value] : []);\n            return undefined;\n        }\n\n        fetch({ input: inputValue }, (results) => {\n            if (active) {\n                let newOptions = [];\n\n                if (value) {\n                    newOptions = [value];\n                }\n\n                if (results) {\n                    newOptions = [...newOptions, ...results];\n                }\n\n                setOptions(newOptions);\n            }\n        });\n\n        return () => {\n            active = false;\n        };\n    }, [value, inputValue, fetch]);\n\n    return (\n        <Autocomplete\n            id=\"google-place-autocomplete\"\n            style={{ width: 250 }}\n            getOptionLabel={(option) =>\n                typeof option === 'string' ? option : option.description\n            }\n            filterOptions={(x) => x}\n            options={options}\n            autoComplete\n            includeInputInList\n            filterSelectedOptions\n            value={value}\n            onChange={(event, newValue) => {\n                setOptions(newValue ? [newValue, ...options] : options);\n                setValue(newValue);\n                props.setLocation(\n                    newValue ? newValue.structured_formatting.main_text : '',\n                );\n            }}\n            onInputChange={(event, newInputValue) => {\n                setInputValue(newInputValue);\n            }}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Location\"\n                    variant=\"outlined\"\n                    fullWidth\n                />\n            )}\n            renderOption={(option) => {\n                const matches =\n                    option.structured_formatting.main_text_matched_substrings;\n                const parts = parse(\n                    option.structured_formatting.main_text,\n                    matches.map((match) => [\n                        match.offset,\n                        match.offset + match.length,\n                    ]),\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span\n                                    key={index}\n                                    style={{\n                                        fontWeight: part.highlight ? 700 : 400,\n                                    }}\n                                >\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.structured_formatting.secondary_text}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n\nexport { GooglePlaceAutoComplete };\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!localStorage.getItem('user')) {\n                    // not logged in so redirect to signin page with the return url\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: 'signin',\n                                state: { from: props.location },\n                            }}\n                        />\n                    );\n                }\n\n                // logged in so return component\n                return <Component {...props} />;\n            }}\n        />\n    );\n}\n\nexport { PrivateRoute };\n","let users = JSON.parse(localStorage.getItem('users')) || [];\n\nexport function configureFakeBackend() {\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const { method, headers } = opts;\n        const body = opts.body && JSON.parse(opts.body);\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(handleRoute, 500);\n\n            function handleRoute() {\n                switch (true) {\n                    case url.endsWith('/users/authenticate') &&\n                        method === 'POST':\n                        return authenticate();\n                    case url.endsWith('/users/register') &&\n                        method === 'POST':\n                        return register();\n                    case url.endsWith('/users') && method === 'GET':\n                        return getUsers();\n                    case url.match(/\\/users\\/\\d+$/) &&\n                        method === 'DELETE':\n                        return deleteUser();\n                    default:\n                        // pass through any requests not handled above\n                        return realFetch(url, opts)\n                            .then((response) => resolve(response))\n                            .catch((error) => reject(error));\n                }\n            }\n\n            // route functions\n\n            function authenticate() {\n                const { username, password } = body;\n                const user = users.find(\n                    (x) =>\n                        x.username === username &&\n                        x.password === password,\n                );\n                if (!user)\n                    return error('Username or password is incorrect');\n                return ok({\n                    id: user.id,\n                    username: user.username,\n                    token: 'fake-jwt-token',\n                    // firstName: user.firstName,\n                    // lastName: user.lastName,\n                });\n            }\n\n            function register() {\n                const user = body;\n\n                if (users.find((x) => x.username === user.username)) {\n                    return error(\n                        `Username  ${user.username} is already taken`,\n                    );\n                }\n\n                // assign user id and a few other properties then save\n                user.id = users.length\n                    ? Math.max(...users.map((x) => x.id)) + 1\n                    : 1;\n                users.push(user);\n                localStorage.setItem('users', JSON.stringify(users));\n\n                return ok();\n            }\n\n            function getUsers() {\n                if (!isLoggedIn()) return unauthorized();\n\n                return ok(users);\n            }\n\n            function deleteUser() {\n                if (!isLoggedIn()) return unauthorized();\n\n                users = users.filter((x) => x.id !== idFromUrl());\n                localStorage.setItem('users', JSON.stringify(users));\n                return ok();\n            }\n\n            // helper functions\n            function ok(body) {\n                resolve({\n                    ok: true,\n                    text: () => Promise.resolve(JSON.stringify(body)),\n                });\n            }\n\n            function unauthorized() {\n                resolve({\n                    status: 401,\n                    text: () =>\n                        Promise.resolve(\n                            JSON.stringify({\n                                message: 'Unauthorized',\n                            }),\n                        ),\n                });\n            }\n\n            function error(message) {\n                resolve({\n                    status: 400,\n                    text: () =>\n                        Promise.resolve(JSON.stringify({ message })),\n                });\n            }\n\n            function isLoggedIn() {\n                return (\n                    headers['Authorization'] ===\n                    'Bearer fake-jwt-token'\n                );\n            }\n\n            function idFromUrl() {\n                const urlParts = url.split('/');\n                return parseInt(urlParts[urlParts.length - 1]);\n            }\n        });\n    };\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR',\n};\n","export const userConstants = {\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE',\n};\n","import { userConstants } from '../_constants';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = initialState, action) {\n    switch (action.type) {\n        case userConstants.LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                user: action.user,\n            };\n        case userConstants.LOGIN_SUCCESS:\n            return {\n                loggedIn: true,\n                user: action.user,\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {};\n        case userConstants.LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport { authentication } from './authentication.reducer';\nimport { registration } from './registration.reducer';\nimport { users } from './users.reducer';\nimport { alert } from './alert.reducer';\n\nconst rootReducer = combineReducers({\n    authentication,\n    registration,\n    users,\n    alert\n});\n\nexport default rootReducer;","import { userConstants } from '../_constants';\n\nexport function registration(state = {}, action) {\n    switch (action.type) {\n        case userConstants.REGISTER_REQUEST:\n            return { registering: true };\n        case userConstants.REGISTER_SUCCESS:\n            return {};\n        case userConstants.REGISTER_FAILURE:\n            return {};\n        default:\n            return state;\n    }\n}\n","import { userConstants } from '../_constants';\n\nexport function users(state = {}, action) {\n    switch (action.type) {\n        case userConstants.GETALL_REQUEST:\n            return {\n                loading: true,\n            };\n        case userConstants.GETALL_SUCCESS:\n            return {\n                items: action.users,\n            };\n        case userConstants.GETALL_FAILURE:\n            return {\n                error: action.error,\n            };\n        case userConstants.DELETE_REQUEST:\n            // add 'deleting:true' property to user being deleted\n            return {\n                ...state,\n                items: state.items.map((user) =>\n                    user.id === action.id\n                        ? { ...user, deleting: true }\n                        : user,\n                ),\n            };\n        case userConstants.DELETE_SUCCESS:\n            // remove deleted user from state\n            return {\n                items: state.items.filter(\n                    (user) => user.id !== action.id,\n                ),\n            };\n        case userConstants.DELETE_FAILURE:\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user\n            return {\n                ...state,\n                items: state.items.map((user) => {\n                    if (user.id === action.id) {\n                        // make copy of user without 'deleting:true' property\n                        const { deleting, ...userCopy } = user;\n                        // return copy of user with 'deleteError:[error]' property\n                        return {\n                            ...userCopy,\n                            deleteError: action.error,\n                        };\n                    }\n\n                    return user;\n                }),\n            };\n        default:\n            return state;\n    }\n}\n","import { alertConstants } from '../_constants';\n\nexport function alert(state = {}, action) {\n    switch (action.type) {\n        case alertConstants.SUCCESS:\n            return {\n                type: 'alert-success',\n                message: action.message\n            };\n        case alertConstants.ERROR:\n            return {\n                type: 'alert-danger',\n                message: action.message\n            };\n        case alertConstants.CLEAR:\n            return {};\n        default:\n            return state\n    }\n}","import { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../_reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(thunkMiddleware, loggerMiddleware),\n);\n","export function authHeader() {\n    let user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.token) {\n        return { Authorization: `Bearer ${user.token}` };\n    } else {\n        return {};\n    }\n}\n","import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HistoryIcon from '@material-ui/icons/History';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst useStyle = makeStyles((theme) => ({\n    listIcon: {\n        minWidth: 40,\n    },\n}));\n\nfunction DrawerMenu() {\n    const classes = useStyle();\n\n    return (\n        <List>\n            <ListItem button component={Link} to=\"/search\">\n                <ListItemIcon className={classes.listIcon}>\n                    <SearchIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Search\" />\n            </ListItem>\n            <ListItem button component={Link} to=\"/orders\">\n                <ListItemIcon className={classes.listIcon}>\n                    <HistoryIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Orders\" />\n            </ListItem>\n        </List>\n    );\n}\n\nexport { DrawerMenu };\n","import AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { DrawerMenu } from './DrawerMenu';\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        paddingRight: 24,\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        height: '100vh',\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(7),\n        },\n    },\n    menuGrid: {\n        flexGrow: 1,\n        flexWrap: 'nowrap',\n    },\n    menuGridItem: {\n        width: drawerWidth - 1,\n    },\n}));\n\nfunction Nav() {\n    const classes = useStyles();\n    const [open, setOpen] = useState(true);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const loggedIn = useSelector((state) => state.authentication.loggedIn);\n    const handleDrawerOpen = () => setOpen(true);\n    const handleDrawerClose = () => setOpen(false);\n    const handleUserIconClose = () => setAnchorEl(null);\n\n    return (\n        <div>\n            <AppBar\n                position=\"absolute\"\n                className={clsx(classes.appBar, open && classes.appBarShift)}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(\n                            classes.menuButton,\n                            open && classes.menuButtonHidden,\n                        )}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        noWrap\n                        className={classes.title}\n                    >\n                        NoMoreWait\n                    </Typography>\n                    <div>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={(event) =>\n                                setAnchorEl(event.currentTarget)\n                            }\n                            color=\"inherit\"\n                            disabled={!loggedIn}\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={Boolean(anchorEl)}\n                            onClose={handleUserIconClose}\n                        >\n                            <MenuItem onClick={handleUserIconClose}>\n                                <Link href=\"/profile\" underline=\"none\">\n                                    Profile\n                                </Link>\n                            </MenuItem>\n                            <MenuItem onClick={handleUserIconClose}>\n                                <Link href=\"/signin\" underline=\"none\">\n                                    Logout\n                                </Link>\n                            </MenuItem>\n                        </Menu>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(\n                        classes.drawerPaper,\n                        !open && classes.drawerPaperClose,\n                    ),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <Grid\n                    className={classes.menuGrid}\n                    container\n                    direction=\"column\"\n                    alignContent=\"space-between\"\n                >\n                    <Grid item xs={2}>\n                        <div className={classes.menuGridItem}>\n                            <DrawerMenu />\n                        </div>\n                    </Grid>\n                    <Grid item xs={8} />\n                    <Grid item xs={2}>\n                        <img\n                            src={`${process.env.PUBLIC_URL}/assets/images/stay-safe-stay-healthy.png`}\n                            style={{ width: '600%', height: '100%' }}\n                        />\n                    </Grid>\n                </Grid>\n            </Drawer>\n        </div>\n    );\n}\n\nexport { Nav };\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction OrdersPage() {\n    const user = useSelector((state) => state.authentication.user);\n    const dispatch = useDispatch();\n\n    return <h1>Please see your orders history below!</h1>;\n}\n\nexport { OrdersPage };\n","import Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(4, 4, 3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: 'white',\n    },\n}));\n\nfunction Profile() {\n    const classes = useStyles();\n    const user = useSelector((state) => state.authentication.user);\n\n    return (\n        <Container maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <h1>username: {user.username}</h1>\n            </div>\n        </Container>\n    );\n}\n\nexport { Profile };\n","import { createGlobalState } from 'react-use';\n\nexport const useSearchLocation = createGlobalState('');\n","import React from 'react';\nimport { GooglePlaceAutoComplete } from '../../_components';\nimport { useSearchLocation } from './global.state';\n\nfunction LocationSearchBox() {\n    const [_, setSearchLocation] = useSearchLocation();\n    return (\n        <div>\n            <GooglePlaceAutoComplete setLocation={setSearchLocation} />\n        </div>\n    );\n}\n\nexport { LocationSearchBox };\n","import DateFnsUtils from '@date-io/date-fns';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    KeyboardDatePicker,\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport 'date-fns';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchLocation } from './global.state';\nimport { LocationSearchBox } from './LocationSearchBox';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(8),\n        padding: theme.spacing(4, 4, 3),\n        backgroundColor: 'white',\n    },\n    locationSearchBox: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction SearchPage() {\n    const classes = useStyles();\n    const [searchLocation] = useSearchLocation();\n    const [selectedDate, setSelectedDate] = useState(Date.now());\n    const user = useSelector((state) => state.authentication.user);\n    const dispatch = useDispatch();\n\n    const handleDateChange = (date) => {\n        console.log(date);\n        setSelectedDate(date);\n    };\n\n    return (\n        <Container maxWidth=\"md\" className={classes.root}>\n            <h1>Welcome to NoMoreWait!</h1>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid container justify=\"space-around\">\n                    <Grid item>\n                        <KeyboardDatePicker\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"search-date\"\n                            label=\"Date\"\n                            value={selectedDate}\n                            onChange={handleDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <KeyboardTimePicker\n                            margin=\"normal\"\n                            id=\"search-time\"\n                            label=\"Time\"\n                            value={selectedDate}\n                            onChange={handleDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change time',\n                            }}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <div className={classes.locationSearchBox}>\n                            <LocationSearchBox />\n                        </div>\n                    </Grid>\n                </Grid>\n            </MuiPickersUtilsProvider>\n        </Container>\n    );\n}\n\nexport { SearchPage };\n","import { alertConstants } from '../_constants';\n\nexport const alertActions = {\n    success,\n    error,\n    clear,\n};\n\nfunction success(message) {\n    return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message) {\n    return { type: alertConstants.ERROR, message };\n}\n\nfunction clear() {\n    return { type: alertConstants.CLEAR };\n}\n","import Config from 'Config';\nimport { authHeader } from '../_helpers';\n\nexport const userService = {\n    login,\n    logout,\n    register,\n    getAll,\n    getById,\n    update,\n    delete: _delete,\n};\n\nfunction login(username, password) {\n    const formBody = `username=${username}&password=${password}&grant_type=&scope=&client_id=&client_secret=`;\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n        },\n        body: formBody,\n    };\n\n    return fetch(`${Config.apiUrl}/token`, requestOptions)\n        .then(handleResponse)\n        .then((data) => {\n            const user = { username, token: data.access_token };\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    return fetch(`${Config.apiV1Url}/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    return fetch(`${Config.apiV1Url}/users/${id}`, requestOptions).then(\n        handleResponse,\n    );\n}\n\nfunction register(user) {\n    const formBody = `username=${user.username}&password=${user.password}`;\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n        },\n        body: formBody,\n    };\n\n    return fetch(`${Config.apiUrl}/signup`, requestOptions).then(\n        handleResponse,\n    );\n}\n\nfunction update(user) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: {\n            ...authHeader(),\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user),\n    };\n\n    return fetch(`${Config.apiV1Url}/users/${user.id}`, requestOptions).then(\n        handleResponse,\n    );\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader(),\n    };\n\n    return fetch(`${Config.apiV1Url}/users/${id}`, requestOptions).then(\n        handleResponse,\n    );\n}\n\nfunction handleResponse(response) {\n    return response.text().then((text) => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                window.location.reload();\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}\n","import { userConstants } from '../_constants';\nimport { history } from '../_helpers';\nimport { userService } from '../_services';\nimport { alertActions } from './';\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n    delete: _delete,\n};\n\nfunction login(username, password, from) {\n    return (dispatch) => {\n        dispatch(request({ username }));\n\n        userService.login(username, password).then(\n            (user) => {\n                dispatch(success(user));\n                history.push(from);\n            },\n            (error) => {\n                dispatch(failure(error.toString()));\n                dispatch(alertActions.error(error.toString()));\n            },\n        );\n    };\n\n    function request(user) {\n        return { type: userConstants.LOGIN_REQUEST, user };\n    }\n\n    function success(user) {\n        return { type: userConstants.LOGIN_SUCCESS, user };\n    }\n\n    function failure(error) {\n        return { type: userConstants.LOGIN_FAILURE, error };\n    }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return (dispatch) => {\n        dispatch(request(user));\n\n        userService.register(user).then(\n            (user) => {\n                dispatch(success(user));\n                history.push('/signin');\n                dispatch(alertActions.success('Registration successful'));\n            },\n            (error) => {\n                dispatch(failure(error.toString()));\n                dispatch(alertActions.error(error.toString()));\n            },\n        );\n    };\n\n    function request(user) {\n        return { type: userConstants.REGISTER_REQUEST, user };\n    }\n\n    function success(user) {\n        return { type: userConstants.REGISTER_SUCCESS, user };\n    }\n\n    function failure(error) {\n        return { type: userConstants.REGISTER_FAILURE, error };\n    }\n}\n\nfunction getAll() {\n    return (dispatch) => {\n        dispatch(request());\n\n        userService.getAll().then(\n            (users) => dispatch(success(users)),\n            (error) => dispatch(failure(error.toString())),\n        );\n    };\n\n    function request() {\n        return { type: userConstants.GETALL_REQUEST };\n    }\n    function success(users) {\n        return { type: userConstants.GETALL_SUCCESS, users };\n    }\n    function failure(error) {\n        return { type: userConstants.GETALL_FAILURE, error };\n    }\n}\n\n// delete is a reserved word in js\nfunction _delete(id) {\n    return (dispatch) => {\n        dispatch(request(id));\n\n        userService.delete(id).then(\n            (user) => dispatch(success(id)),\n            (error) => dispatch(failure(id, error.toString())),\n        );\n    };\n\n    function request(id) {\n        return { type: userConstants.DELETE_REQUEST, id };\n    }\n\n    function success(id) {\n        return { type: userConstants.DELETE_SUCCESS, id };\n    }\n\n    function failure(id, error) {\n        return { type: userConstants.DELETE_FAILURE, id, error };\n    }\n}\n","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DemoColor from '@material-ui/core/colors/green';\nimport Container from '@material-ui/core/Container';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { alertActions, userActions } from '../../_actions';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        padding: theme.spacing(0, 4, 3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: 'white',\n    },\n    topSpace: {\n        paddingTop: theme.spacing(4),\n    },\n    demo: {\n        color: DemoColor['A700'],\n        fontWeight: 500,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(0, 0, 2),\n    },\n    circularProgress: {\n        marginLeft: theme.spacing(2),\n    },\n    register: {\n        margin: theme.spacing(0, 0, 1),\n    },\n}));\n\nfunction SignInPage() {\n    const classes = useStyles();\n    const [inputs, setInputs] = useState({\n        username: 'demo',\n        password: 'demo',\n    });\n    const { username, password } = inputs;\n    const loggingIn = useSelector((state) => state.authentication.loggingIn);\n    const alert = useSelector((state) => state.alert);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    // reset login status\n    useEffect(() => {\n        dispatch(userActions.logout());\n        return () => {\n            // clear alert on location change\n            dispatch(alertActions.clear());\n        };\n    }, []);\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (username && password) {\n            // get return url from location state or default to home page\n            const { from } = location.state || { from: { pathname: '/' } };\n            dispatch(userActions.login(username, password, from));\n        }\n    }\n\n    return (\n        <Container maxWidth=\"xs\">\n            <div className={classes.paper}>\n                {username === 'demo' && (\n                    <p className={classes.demo}>\n                        demo account has been filled in, feel free to sign in!\n                    </p>\n                )}\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form\n                    className={classes.form}\n                    noValidate\n                    onSubmit={handleSubmit}\n                >\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        value={username}\n                        autoFocus\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={handleChange}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container className={classes.register}>\n                        <Grid item>\n                            <Link href=\"/signup\" underline=\"always\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                        <Grid item className={classes.circularProgress}>\n                            {loggingIn && (\n                                <CircularProgress size={25} color=\"secondary\" />\n                            )}\n                        </Grid>\n                    </Grid>\n                    {alert.message &&\n                        (alert.type === 'alert-success' ? (\n                            <Alert severity=\"success\">{alert.message}</Alert>\n                        ) : (\n                            <Alert severity=\"error\">{alert.message}</Alert>\n                        ))}\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport { SignInPage };\n","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Container from '@material-ui/core/Container';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../_actions';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        padding: theme.spacing(4, 4, 3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: 'white',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(0, 0, 2),\n    },\n}));\n\nfunction SignUpPage() {\n    const classes = useStyles();\n    const [user, setUser] = useState({\n        username: '',\n        email: '',\n        password: '',\n    });\n    const alert = useSelector((state) => state.alert);\n    const dispatch = useDispatch();\n\n    // reset login status\n    useEffect(() => {\n        dispatch(userActions.logout());\n    }, []);\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setUser((user) => ({ ...user, [name]: value }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (user.username && user.password && user.email) {\n            dispatch(userActions.register(user));\n        }\n    }\n\n    return (\n        <Container maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form\n                    className={classes.form}\n                    name=\"form\"\n                    onSubmit={handleSubmit}\n                >\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"username\"\n                                name=\"username\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                autoFocus\n                                onChange={handleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={handleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={handleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        value=\"allowExtraEmails\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/signin\" underline=\"always\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {alert.message && (\n                        <Alert severity=\"error\">{alert.message}</Alert>\n                    )}\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport { SignUpPage };\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { Redirect, Route, Router, Switch } from 'react-router-dom';\nimport { PrivateRoute } from '../../_components';\nimport { history } from '../../_helpers';\nimport { Nav } from '../Nav';\nimport { OrdersPage } from '../OrdersPage';\nimport { Profile } from '../Profile';\nimport { SearchPage } from '../SearchPage';\nimport { SignInPage } from '../SignInPage';\nimport { SignUpPage } from '../SignUpPage';\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n}));\n\nfunction App() {\n    const classes = useStyle();\n    return (\n        <div className={classes.root}>\n            <Router history={history}>\n                <CssBaseline />\n                <Nav />\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Switch>\n                        <Route path=\"/signin\" component={SignInPage} />\n                        <Route path=\"/signup\" component={SignUpPage} />\n                        <PrivateRoute exact path=\"/\" component={SearchPage} />\n                        <PrivateRoute path=\"/search\" component={SearchPage} />\n                        <PrivateRoute path=\"/orders\" component={OrdersPage} />\n                        <PrivateRoute path=\"/profile\" component={Profile} />\n                        <Redirect from=\"*\" to=\"/\" />\n                    </Switch>\n                </main>\n            </Router>\n        </div>\n    );\n}\n\nexport { App };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './_helpers';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\"apiUrl\":\"http://localhost:9000/api\",\"apiV1Url\":\"http://localhost:9000/api/v1\"};"],"sourceRoot":""}